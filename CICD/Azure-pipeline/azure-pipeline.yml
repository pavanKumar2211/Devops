# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  DOCKER_REPOSITORY_URI: <docker-repository-url>
  VERSION: "0.0.1"

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Pay-As-You-Go'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      GIT_COMMIT_ID=$(git rev-parse HEAD | cut -c 1-7)
      TIMESTAMP=$(date +'%Y%m%d.%H%M')
      TAG_NAME="v-$VERSION-$TIMESTAMP-$GIT_COMMIT_ID"
      TAG="v-$VERSION"
      IMG_NAME="$DOCKER_REPOSITORY_URI:$TAG_NAME"
      IMAGE="$DOCKER_REPOSITORY_URI:$TAG"
      IMAGE_LATEST="$DOCKER_REPOSITORY_URI:latest"

      docker build -t "$IMG_NAME" -f ../../Docker/gradleagent.Dockerfile .
      docker tag "$IMG_NAME" "$IMAGE"
      docker tag "$IMG_NAME" "$IMAGE_LATEST"

      az acr login -n starzoppuat           
      docker push "$IMG_NAME"
      docker push "$IMAGE"
      docker push "$IMAGE_LATEST"
      
      sed -i "s|<IMAGE>|$DOCKER_REPOSITORY_URI:$TAG_NAME|g"  kubernetes/deployement.yaml

- task: Kubernetes@1
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'Pay-As-You-Go'
    azureResourceGroup: <resource-grp-name>
    kubernetesCluster: <cluster-name>
    namespace: <namespace>
    command: 'apply'
    useConfigurationFile: true
    configuration: 'kubernetes'



